/*
 * Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

// texture containing gradient colors
param sampler colors;
// content.x = half pixel X offset
// content.y = Y coordinate of gradient row
// content.z = scale factor for fract
// content.w = scale factor for clamp
// scale factors for PAD = (0, 0.5)
// scale factors for REPEAT = (0.5, 0)
// scale factors for REFLECT = (1.0-halfpix, 0)
param float4 content;

/*
 * To simplify the code and to make it easier to upload a number of
 * uniform values at once, we pack a bunch of scalar (float) values
 * into float3 values below.  Here's how the values are related:
 *
 *   precalc.x = focusX
 *   precalc.y = 1.0 - (focusX * focusX)
 *   precalc.z = 1.0 / precalc.z
 */
param float3 precalc;

float4 paint(float2 texCoord)
{
    /*
     * The following code is derived from Daniel Rice's whitepaper on
     * radial gradient performance (attached to the bug report for 6521533).
     * Refer to that document as well as the setup code in the Java-level
     * setRadialGradientPaint() method for more details.
     */
    float xfx = texCoord.x - precalc.x;
    float dist = (precalc.x*xfx + sqrt(xfx*xfx + texCoord.y*texCoord.y*precalc.y))*precalc.z;
    float2 fractvals = float2(fract(dist), clamp(dist, 0.0, 1.0));
    float2 clrCoord = float2(content.x + dot(fractvals, content.zw), content.y);
    return sample(colors, clrCoord);
}
