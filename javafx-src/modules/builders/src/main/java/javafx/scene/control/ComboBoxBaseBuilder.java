/* 
 * Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

package javafx.scene.control;

/**
Builder class for javafx.scene.control.ComboBoxBase
@see javafx.scene.control.ComboBoxBase
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.1
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public abstract class ComboBoxBaseBuilder<T, B extends javafx.scene.control.ComboBoxBaseBuilder<T, B>> extends javafx.scene.control.ControlBuilder<B> {
    protected ComboBoxBaseBuilder() {
    }
    
    
    private int __set;
    private void __set(int i) {
        __set |= 1 << i;
    }
    public void applyTo(javafx.scene.control.ComboBoxBase<T> x) {
        super.applyTo(x);
        int set = __set;
        while (set != 0) {
            int i = Integer.numberOfTrailingZeros(set);
            set &= ~(1 << i);
            switch (i) {
                case 0: x.setEditable(this.editable); break;
                case 1: x.setOnAction(this.onAction); break;
                case 2: x.setOnHidden(this.onHidden); break;
                case 3: x.setOnHiding(this.onHiding); break;
                case 4: x.setOnShowing(this.onShowing); break;
                case 5: x.setOnShown(this.onShown); break;
                case 6: x.setPromptText(this.promptText); break;
                case 7: x.setValue(this.value); break;
            }
        }
    }
    
    private boolean editable;
    /**
    Set the value of the {@link javafx.scene.control.ComboBoxBase#isEditable() editable} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B editable(boolean x) {
        this.editable = x;
        __set(0);
        return (B) this;
    }
    
    private javafx.event.EventHandler<javafx.event.ActionEvent> onAction;
    /**
    Set the value of the {@link javafx.scene.control.ComboBoxBase#getOnAction() onAction} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B onAction(javafx.event.EventHandler<javafx.event.ActionEvent> x) {
        this.onAction = x;
        __set(1);
        return (B) this;
    }
    
    private javafx.event.EventHandler<javafx.event.Event> onHidden;
    /**
    Set the value of the {@link javafx.scene.control.ComboBoxBase#getOnHidden() onHidden} property for the instance constructed by this builder.
    * @since JavaFX 2.2
    */
    @SuppressWarnings("unchecked")
    public B onHidden(javafx.event.EventHandler<javafx.event.Event> x) {
        this.onHidden = x;
        __set(2);
        return (B) this;
    }
    
    private javafx.event.EventHandler<javafx.event.Event> onHiding;
    /**
    Set the value of the {@link javafx.scene.control.ComboBoxBase#getOnHiding() onHiding} property for the instance constructed by this builder.
    * @since JavaFX 2.2
    */
    @SuppressWarnings("unchecked")
    public B onHiding(javafx.event.EventHandler<javafx.event.Event> x) {
        this.onHiding = x;
        __set(3);
        return (B) this;
    }
    
    private javafx.event.EventHandler<javafx.event.Event> onShowing;
    /**
    Set the value of the {@link javafx.scene.control.ComboBoxBase#getOnShowing() onShowing} property for the instance constructed by this builder.
    * @since JavaFX 2.2
    */
    @SuppressWarnings("unchecked")
    public B onShowing(javafx.event.EventHandler<javafx.event.Event> x) {
        this.onShowing = x;
        __set(4);
        return (B) this;
    }
    
    private javafx.event.EventHandler<javafx.event.Event> onShown;
    /**
    Set the value of the {@link javafx.scene.control.ComboBoxBase#getOnShown() onShown} property for the instance constructed by this builder.
    * @since JavaFX 2.2
    */
    @SuppressWarnings("unchecked")
    public B onShown(javafx.event.EventHandler<javafx.event.Event> x) {
        this.onShown = x;
        __set(5);
        return (B) this;
    }
    
    private java.lang.String promptText;
    /**
    Set the value of the {@link javafx.scene.control.ComboBoxBase#getPromptText() promptText} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B promptText(java.lang.String x) {
        this.promptText = x;
        __set(6);
        return (B) this;
    }
    
    private T value;
    /**
    Set the value of the {@link javafx.scene.control.ComboBoxBase#getValue() value} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B value(T x) {
        this.value = x;
        __set(7);
        return (B) this;
    }
    
}
