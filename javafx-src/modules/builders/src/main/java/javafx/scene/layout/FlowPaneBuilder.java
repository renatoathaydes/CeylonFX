/* 
 * Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

package javafx.scene.layout;

/**
Builder class for javafx.scene.layout.FlowPane
@see javafx.scene.layout.FlowPane
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class FlowPaneBuilder<B extends javafx.scene.layout.FlowPaneBuilder<B>> extends javafx.scene.layout.PaneBuilder<B> {
    protected FlowPaneBuilder() {
    }
    
    /** Creates a new instance of FlowPaneBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.layout.FlowPaneBuilder<?> create() {
        return new javafx.scene.layout.FlowPaneBuilder();
    }
    
    private int __set;
    public void applyTo(javafx.scene.layout.FlowPane x) {
        super.applyTo(x);
        int set = __set;
        if ((set & (1 << 0)) != 0) x.setAlignment(this.alignment);
        if ((set & (1 << 1)) != 0) x.setColumnHalignment(this.columnHalignment);
        if ((set & (1 << 2)) != 0) x.setHgap(this.hgap);
        if ((set & (1 << 3)) != 0) x.setOrientation(this.orientation);
        if ((set & (1 << 4)) != 0) x.setPrefWrapLength(this.prefWrapLength);
        if ((set & (1 << 5)) != 0) x.setRowValignment(this.rowValignment);
        if ((set & (1 << 6)) != 0) x.setVgap(this.vgap);
    }
    
    private javafx.geometry.Pos alignment;
    /**
    Set the value of the {@link javafx.scene.layout.FlowPane#getAlignment() alignment} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B alignment(javafx.geometry.Pos x) {
        this.alignment = x;
        __set |= 1 << 0;
        return (B) this;
    }
    
    private javafx.geometry.HPos columnHalignment;
    /**
    Set the value of the {@link javafx.scene.layout.FlowPane#getColumnHalignment() columnHalignment} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B columnHalignment(javafx.geometry.HPos x) {
        this.columnHalignment = x;
        __set |= 1 << 1;
        return (B) this;
    }
    
    private double hgap;
    /**
    Set the value of the {@link javafx.scene.layout.FlowPane#getHgap() hgap} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B hgap(double x) {
        this.hgap = x;
        __set |= 1 << 2;
        return (B) this;
    }
    
    private javafx.geometry.Orientation orientation;
    /**
    Set the value of the {@link javafx.scene.layout.FlowPane#getOrientation() orientation} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B orientation(javafx.geometry.Orientation x) {
        this.orientation = x;
        __set |= 1 << 3;
        return (B) this;
    }
    
    private double prefWrapLength;
    /**
    Set the value of the {@link javafx.scene.layout.FlowPane#getPrefWrapLength() prefWrapLength} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B prefWrapLength(double x) {
        this.prefWrapLength = x;
        __set |= 1 << 4;
        return (B) this;
    }
    
    private javafx.geometry.VPos rowValignment;
    /**
    Set the value of the {@link javafx.scene.layout.FlowPane#getRowValignment() rowValignment} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B rowValignment(javafx.geometry.VPos x) {
        this.rowValignment = x;
        __set |= 1 << 5;
        return (B) this;
    }
    
    private double vgap;
    /**
    Set the value of the {@link javafx.scene.layout.FlowPane#getVgap() vgap} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B vgap(double x) {
        this.vgap = x;
        __set |= 1 << 6;
        return (B) this;
    }
    
    /**
    Make an instance of {@link javafx.scene.layout.FlowPane} based on the properties set on this builder.
    */
    public javafx.scene.layout.FlowPane build() {
        javafx.scene.layout.FlowPane x = new javafx.scene.layout.FlowPane();
        applyTo(x);
        return x;
    }
}
