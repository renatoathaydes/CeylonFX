/* 
 * Copyright (c) 2011, 2013, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

package javafx.scene.layout;

/**
Builder class for javafx.scene.layout.TilePane
@see javafx.scene.layout.TilePane
@deprecated This class is deprecated and will be removed in the next version
* @since JavaFX 2.0
*/
@javax.annotation.Generated("Generated by javafx.builder.processor.BuilderProcessor")
@Deprecated
public class TilePaneBuilder<B extends javafx.scene.layout.TilePaneBuilder<B>> extends javafx.scene.layout.PaneBuilder<B> {
    protected TilePaneBuilder() {
    }
    
    /** Creates a new instance of TilePaneBuilder. */
    @SuppressWarnings({"deprecation", "rawtypes", "unchecked"})
    public static javafx.scene.layout.TilePaneBuilder<?> create() {
        return new javafx.scene.layout.TilePaneBuilder();
    }
    
    private int __set;
    private void __set(int i) {
        __set |= 1 << i;
    }
    public void applyTo(javafx.scene.layout.TilePane x) {
        super.applyTo(x);
        int set = __set;
        while (set != 0) {
            int i = Integer.numberOfTrailingZeros(set);
            set &= ~(1 << i);
            switch (i) {
                case 0: x.setAlignment(this.alignment); break;
                case 1: x.setHgap(this.hgap); break;
                case 2: x.setOrientation(this.orientation); break;
                case 3: x.setPrefColumns(this.prefColumns); break;
                case 4: x.setPrefRows(this.prefRows); break;
                case 5: x.setPrefTileHeight(this.prefTileHeight); break;
                case 6: x.setPrefTileWidth(this.prefTileWidth); break;
                case 7: x.setTileAlignment(this.tileAlignment); break;
                case 8: x.setVgap(this.vgap); break;
            }
        }
    }
    
    private javafx.geometry.Pos alignment;
    /**
    Set the value of the {@link javafx.scene.layout.TilePane#getAlignment() alignment} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B alignment(javafx.geometry.Pos x) {
        this.alignment = x;
        __set(0);
        return (B) this;
    }
    
    private double hgap;
    /**
    Set the value of the {@link javafx.scene.layout.TilePane#getHgap() hgap} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B hgap(double x) {
        this.hgap = x;
        __set(1);
        return (B) this;
    }
    
    private javafx.geometry.Orientation orientation;
    /**
    Set the value of the {@link javafx.scene.layout.TilePane#getOrientation() orientation} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B orientation(javafx.geometry.Orientation x) {
        this.orientation = x;
        __set(2);
        return (B) this;
    }
    
    private int prefColumns;
    /**
    Set the value of the {@link javafx.scene.layout.TilePane#getPrefColumns() prefColumns} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B prefColumns(int x) {
        this.prefColumns = x;
        __set(3);
        return (B) this;
    }
    
    private int prefRows;
    /**
    Set the value of the {@link javafx.scene.layout.TilePane#getPrefRows() prefRows} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B prefRows(int x) {
        this.prefRows = x;
        __set(4);
        return (B) this;
    }
    
    private double prefTileHeight;
    /**
    Set the value of the {@link javafx.scene.layout.TilePane#getPrefTileHeight() prefTileHeight} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B prefTileHeight(double x) {
        this.prefTileHeight = x;
        __set(5);
        return (B) this;
    }
    
    private double prefTileWidth;
    /**
    Set the value of the {@link javafx.scene.layout.TilePane#getPrefTileWidth() prefTileWidth} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B prefTileWidth(double x) {
        this.prefTileWidth = x;
        __set(6);
        return (B) this;
    }
    
    private javafx.geometry.Pos tileAlignment;
    /**
    Set the value of the {@link javafx.scene.layout.TilePane#getTileAlignment() tileAlignment} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B tileAlignment(javafx.geometry.Pos x) {
        this.tileAlignment = x;
        __set(7);
        return (B) this;
    }
    
    private double vgap;
    /**
    Set the value of the {@link javafx.scene.layout.TilePane#getVgap() vgap} property for the instance constructed by this builder.
    */
    @SuppressWarnings("unchecked")
    public B vgap(double x) {
        this.vgap = x;
        __set(8);
        return (B) this;
    }
    
    /**
    Make an instance of {@link javafx.scene.layout.TilePane} based on the properties set on this builder.
    */
    public javafx.scene.layout.TilePane build() {
        javafx.scene.layout.TilePane x = new javafx.scene.layout.TilePane();
        applyTo(x);
        return x;
    }
}
